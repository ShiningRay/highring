/** Declaration file generated by dts-gen */

declare module "jason/promise" {
    export class Client {
        constructor(server: any, options: any, ...args: any[]);

        request(method: string, params: any[], id: any): Promise<any>;

    }

    export type client = Client;

}

declare module "jayson" {
    export class Client {
        constructor(server: any, options: any, ...args: any[]);

        request(method: any, params: any, id: any, callback: any): any;

    }

    export type client = Client;

    export class Method {
        constructor(handler: any, options: any);

        execute(server: any, requestParams: any, callback: any): any;

        getHandler(): any;

        setHandler(handler: any): void;

    }

    export class Server {
        constructor(methods: any, options: any);

        call(request: any, originalCallback: any, ...args: any[]): any;

        error(code: any, message: any, data: any): any;

        getMethod(name: any): any;

        hasMethod(name: any): any;

        method(name: any, definition: any): void;

        methods(methods: any): void;

        removeMethod(name: any): void;

        static errorMessages: {
            "-32600": string;
            "-32601": string;
            "-32602": string;
            "-32603": string;
            "-32700": string;
        };

        static errors: {
            INTERNAL_ERROR: number;
            INVALID_PARAMS: number;
            INVALID_REQUEST: number;
            METHOD_NOT_FOUND: number;
            PARSE_ERROR: number;
        };

    }
    export type server = Server;
}
